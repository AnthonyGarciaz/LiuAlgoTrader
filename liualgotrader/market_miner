#!/usr/bin/env python

"""Cluster tickers by industry & sector """
import asyncio
import os


import pygit2


from liualgotrader.common import config
from liualgotrader.common.database import create_db_connection
from liualgotrader.common.decorators import timeit
from liualgotrader.common.tlog import tlog



from liualgotrader.miners.stock_cluster import StockCluster


def motd(filename: str, version: str) -> None:
    """Display welcome message"""

    print("+=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=+")
    tlog(f"{filename} {version} starting")
    print("+=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=+")
    tlog(f"DSN: {config.dsn}")
    print("+=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=+")


def main():
    try:
        asyncio.get_event_loop().run_until_complete(create_db_connection())
        asyncio.get_event_loop().run_until_complete(update_all_tickers_data())
    except KeyboardInterrupt:
        tlog("Caught KeyboardInterrupt")


if __name__ == "__main__":
    """
    starting
    """
    try:
        build_label = pygit2.Repository("../").describe(
            describe_strategy=pygit2.GIT_DESCRIBE_TAGS
        )
    except pygit2.GitError:
        import liualgotrader

        build_label = liualgotrader.__version__ if hasattr(liualgotrader, "__version__") else ""  # type: ignore

    filename = os.path.basename(__file__)
    motd(filename=filename, version=build_label)

    main()
    tlog("Done.")
